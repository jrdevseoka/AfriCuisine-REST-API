using Africuisine.Domain.Models;
using Africuisine.Domain.Models.User;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.ChangeTracking;

namespace Africuisine.Infrastructure.Helpers.Utils
{
    public class Save : ISave
    {
        public int GenerateBaseModelData(IEnumerable<EntityEntry> entries, CancellationToken cancellationToken = default)
        {
            cancellationToken.ThrowIfCancellationRequested();
            foreach(var entry in entries)
            {
                var entity = GetEntityType(entry);
                if(entity is DataModelBase model)
                {
                    AutoGenerateDataModelBaseData(entry.State, model);
                }
            }
            return 0;
        }
        private static object GetEntityType(object entry)
        {
            return entry switch
            {
                UserDM user => user,
                RoleClaimDM roleClaim => roleClaim,
                RoleDM role => role,
                UserClaimDM claim => claim,
                UserLoginDM userLogin => userLogin,
                UserTokenDM userToken => userToken,
                UserRoleDM userRole => userRole,
                _ => (DataModelBase)entry,
            };
        }
        private static void AutoGenerateDataModelBaseData(
            EntityState entryState,
            DataModelBase user
        )
        {
            if (entryState == EntityState.Added)
            {
                user.Creation = DateTime.Now;
                user.LastUpdate = DateTime.Now;
                user.SeqNo = 0;
            }
            if (entryState == EntityState.Modified)
            {
                user.LastUpdate = DateTime.Now;
                user.SeqNo++;
            }
        }
    }
}