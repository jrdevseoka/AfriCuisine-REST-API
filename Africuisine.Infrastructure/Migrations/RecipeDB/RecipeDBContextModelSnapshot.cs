// <auto-generated />
using System;
using Africuisine.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Africuisine.Infrastructure.Migrations.RecipeDB
{
    [DbContext(typeof(RecipeDBContext))]
    partial class RecipeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Africuisine.Domain.Models.Pictures.PictureDM", b =>
                {
                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("LUserUpdate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Link");

                    b.HasIndex("LUserUpdate");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("PICTURES", (string)null);
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Pictures.ProfilePictureDM", b =>
                {
                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("LPicture")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LUserUpdate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.HasKey("Link");

                    b.HasIndex("LPicture");

                    b.HasIndex("LUserUpdate");

                    b.ToTable("PROFILEPICTURES", (string)null);
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.InstructionDM", b =>
                {
                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LRecipe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LUserUpdate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.HasKey("Link");

                    b.HasIndex("LRecipe");

                    b.HasIndex("LUserUpdate");

                    b.ToTable("RECINSTRUCTIONS", (string)null);
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.RecipeCategoryDM", b =>
                {
                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("LUserUpdate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.HasKey("Link");

                    b.HasIndex("LUserUpdate");

                    b.ToTable("RECCATEGORIES", (string)null);
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.RecipeDM", b =>
                {
                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCategory")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LDifficulty")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LUserUpdate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.HasKey("Link");

                    b.HasIndex("LCategory");

                    b.HasIndex("LDifficulty");

                    b.HasIndex("LUserUpdate");

                    b.ToTable("RECIPES", (string)null);
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.RecipeLevelDM", b =>
                {
                    b.Property<string>("Link")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("LUserUpdate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.HasKey("Link");

                    b.HasIndex("LUserUpdate");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_RecDifficulty_Name");

                    b.ToTable("RECDIFFICULTY", (string)null);

                    b.HasData(
                        new
                        {
                            Link = "5373f2c7-37a7-47db-9e8d-446bec6eb122",
                            Creation = new DateTime(2023, 12, 22, 15, 35, 14, 298, DateTimeKind.Local).AddTicks(9176),
                            LastUpdate = new DateTime(2023, 12, 22, 15, 35, 14, 298, DateTimeKind.Local).AddTicks(9186),
                            Name = "Easy",
                            SeqNo = 0
                        },
                        new
                        {
                            Link = "1a061260-7870-4cd0-a4b3-cc786e749196",
                            Creation = new DateTime(2023, 12, 22, 15, 35, 14, 298, DateTimeKind.Local).AddTicks(9222),
                            LastUpdate = new DateTime(2023, 12, 22, 15, 35, 14, 298, DateTimeKind.Local).AddTicks(9223),
                            Name = "Hard",
                            SeqNo = 0
                        },
                        new
                        {
                            Link = "6f5d5d86-61bf-49c9-a57d-43a98714faf4",
                            Creation = new DateTime(2023, 12, 22, 15, 35, 14, 298, DateTimeKind.Local).AddTicks(9226),
                            LastUpdate = new DateTime(2023, 12, 22, 15, 35, 14, 298, DateTimeKind.Local).AddTicks(9227),
                            Name = "Expert",
                            SeqNo = 0
                        });
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.RecipePictureDM", b =>
                {
                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("LPicture")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LRecipe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LUserUpdate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.HasKey("Link");

                    b.HasIndex("LPicture");

                    b.HasIndex("LRecipe");

                    b.HasIndex("LUserUpdate");

                    b.ToTable("RECPICTURES", (string)null);
                });

            modelBuilder.Entity("Africuisine.Domain.Models.UserDM", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserDM", (string)null);
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Pictures.PictureDM", b =>
                {
                    b.HasOne("Africuisine.Domain.Models.UserDM", "User")
                        .WithMany()
                        .HasForeignKey("LUserUpdate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Pictures.ProfilePictureDM", b =>
                {
                    b.HasOne("Africuisine.Domain.Models.Pictures.PictureDM", "Picture")
                        .WithMany()
                        .HasForeignKey("LPicture");

                    b.HasOne("Africuisine.Domain.Models.UserDM", "User")
                        .WithMany()
                        .HasForeignKey("LUserUpdate");

                    b.Navigation("Picture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.InstructionDM", b =>
                {
                    b.HasOne("Africuisine.Domain.Models.Recipes.RecipeDM", "Recipe")
                        .WithMany()
                        .HasForeignKey("LRecipe");

                    b.HasOne("Africuisine.Domain.Models.UserDM", "User")
                        .WithMany()
                        .HasForeignKey("LUserUpdate");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.RecipeCategoryDM", b =>
                {
                    b.HasOne("Africuisine.Domain.Models.UserDM", "User")
                        .WithMany()
                        .HasForeignKey("LUserUpdate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.RecipeDM", b =>
                {
                    b.HasOne("Africuisine.Domain.Models.Recipes.RecipeCategoryDM", "Category")
                        .WithMany()
                        .HasForeignKey("LCategory");

                    b.HasOne("Africuisine.Domain.Models.Recipes.RecipeLevelDM", "Difficulty")
                        .WithMany()
                        .HasForeignKey("LDifficulty");

                    b.HasOne("Africuisine.Domain.Models.UserDM", "User")
                        .WithMany()
                        .HasForeignKey("LUserUpdate");

                    b.Navigation("Category");

                    b.Navigation("Difficulty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.RecipeLevelDM", b =>
                {
                    b.HasOne("Africuisine.Domain.Models.UserDM", "User")
                        .WithMany()
                        .HasForeignKey("LUserUpdate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Africuisine.Domain.Models.Recipes.RecipePictureDM", b =>
                {
                    b.HasOne("Africuisine.Domain.Models.Pictures.PictureDM", "Picture")
                        .WithMany()
                        .HasForeignKey("LPicture");

                    b.HasOne("Africuisine.Domain.Models.Recipes.RecipeDM", "Recipe")
                        .WithMany()
                        .HasForeignKey("LRecipe");

                    b.HasOne("Africuisine.Domain.Models.UserDM", "User")
                        .WithMany()
                        .HasForeignKey("LUserUpdate");

                    b.Navigation("Picture");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
